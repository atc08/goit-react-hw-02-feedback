{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","index","type","className","s","FeedBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","FeedbackStats","stats","Notification","message","NotificationMassege","Section","title","children","App","state","leaveFeedback","value","setState","prevState","this","goodPersent","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAsBeA,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACjB,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,QACbC,QAAS,kBAAMR,EAAgBE,IAJjC,SAMGA,GALIC,O,gBCiBIM,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKT,UAAWC,IAAES,cAAlB,UACE,oBAAGV,UAAWC,IAAEU,MAAhB,mBAA8BN,KAC9B,oBAAGL,UAAWC,IAAEU,MAAhB,sBAAiCL,KACjC,oBAAGN,UAAWC,IAAEU,MAAhB,kBAA6BJ,KAC7B,oBAAGP,UAAWC,IAAEU,MAAhB,oBAA+BH,KAC/B,oBAAGR,UAAWC,IAAEU,MAAhB,gCAA2CF,EAA3C,W,gBCKSG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,cAAC,WAAD,UACE,mBAAGb,UAAWC,IAAEa,oBAAhB,SAAsCD,OCU7BE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAAC,WAAD,WACG,oBAAIjB,UAAU,QAAd,SAAuBgB,IACvBC,MC8CQC,E,4MA9CbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAQE,EAAUF,GAAS,O,uDAI/B,IACAhB,EAASmB,KAAKL,MAAdd,KACAC,EAAYkB,KAAKL,MAAjBb,QACAC,EAAQiB,KAAKL,MAAbZ,IACFC,EAAQH,EAAOC,EAAUC,EACzBkB,EAAcC,KAAKC,MAAOtB,EAAOG,EAAS,KAEhD,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEtB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB6B,KAAKJ,kBAI1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACGR,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBgB,IAGtB,cAAC,EAAD,CAAcZ,QAAQ,+B,GAvChBe,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,sCCT1BC,EAAOC,QAAU,CAAC,QAAU,mC","file":"static/js/main.11443779.chunk.js","sourcesContent":["import React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option, index) => (\n    <button\n      key={index}\n      type=\"button\"\n      className={s.FeedBtn}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.FeedbackStats}>\n      <p className={s.stats}>Good: {good}</p>\n      <p className={s.stats}>Neutral: {neutral}</p>\n      <p className={s.stats}>Bad: {bad}</p>\n      <p className={s.stats}>Total: {total}</p>\n      <p className={s.stats}>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Fragment } from 'react';\nimport s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <Fragment>\n      <p className={s.NotificationMassege}>{message}</p>\n    </Fragment>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Fragment>\n      {<h2 className=\"title\">{title}</h2>}\n      {children}\n    </Fragment>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = value => {\n    this.setState(prevState => {\n      return { [value]: prevState[value] + 1 };\n    });\n  };\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    const total = good + neutral + bad;\n    const goodPersent = Math.round((good / total) * 100);\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={goodPersent}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedBtn\":\"FeedbackOptions_FeedBtn__1xYYx\"};"],"sourceRoot":""}