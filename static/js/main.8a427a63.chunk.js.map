{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","index","className","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","title","children","App","state","leaveFeedback","value","setState","prevState","this","goodPersent","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAuBeA,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACjB,qBAAKC,UAAU,eAAf,SACE,wBACEC,KAAK,SACLD,UAAU,UACVE,QAAS,kBAAMN,EAAgBE,IAHjC,SAKGA,KAN8BC,OCkBxBI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKR,UAAU,gBAAf,UACE,oBAAGA,UAAU,QAAb,mBAA4BI,KAC5B,oBAAGJ,UAAU,QAAb,sBAA+BK,KAC/B,oBAAGL,UAAU,QAAb,kBAA2BM,KAC3B,oBAAGN,UAAU,QAAb,oBAA6BO,KAC7B,oBAAGP,UAAU,QAAb,gCAAyCQ,EAAzC,WCKSC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGV,UAAU,sBAAb,SAAoCU,OCS3BC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACG,6BAAKD,IACLC,MCmDQC,E,4MAlDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAUPU,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAQE,EAAUF,GAAS,O,uDAKvC,IAAMV,EAAQa,KAAKL,MAAMX,KAAOgB,KAAKL,MAAMV,QAAUe,KAAKL,MAAMT,IAC1De,EAAcC,KAAKC,MAAOH,KAAKL,MAAMX,KAAOG,EAAS,KAE3D,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBwB,KAAKJ,kBAI1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACGL,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMgB,KAAKL,MAAMX,KACjBC,QAASe,KAAKL,MAAMV,QACpBC,IAAKc,KAAKL,MAAMT,IAChBC,MAAOA,EACPC,mBAAoBa,IAGtB,cAAC,EAAD,CAAcX,QAAQ,+B,GA3ChBc,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a427a63.chunk.js","sourcesContent":["import React from 'react';\n// import s from './FeedbackOption.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option, index) => (\n    <div className=\"FeedbackBtns\" key={index}>\n      <button\n        type=\"button\"\n        className=\"FeedBtn\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    </div>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n// import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className=\"FeedbackStats\">\n      <p className=\"stats\">Good: {good}</p>\n      <p className=\"stats\">Neutral: {neutral}</p>\n      <p className=\"stats\">Bad: {bad}</p>\n      <p className=\"stats\">Total: {total}</p>\n      <p className=\"stats\">Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\n// import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className=\"NotificationMassege\">{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      {<h2>{title}</h2>}\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // show = () => {\n  //   if (this.state.good > 0);\n  // };\n  // hide = () => {\n  //   if (this.state.good < 1);\n  // };\n\n  leaveFeedback = value => {\n    this.setState(prevState => {\n      return { [value]: prevState[value] + 1 };\n    });\n  };\n\n  render() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    const goodPersent = Math.round((this.state.good / total) * 100);\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={goodPersent}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}